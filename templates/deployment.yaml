apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
{{ include "labels" . | indent 4 }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
{{ include "template.labels" . | indent 8 }}
      annotations:
        # Wait until postgres is ready before starting..
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "wait-for-postgres",
                "image": "jwilder/dockerize:latest",
                "imagePullPolicy": "IfNotPresent",
                "command": ["dockerize", "-wait", "tcp://sqlproxy-gcloud-sqlproxy.sqlproxy:5432", "-timeout", "30s"]
            }
        ]'
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}:{{ .Values.version }}
        imagePullPolicy: Always
        env:
        - name: POSTGRES_PORT_5432_TCP_ADDR
          value: "sqlproxy-gcloud-sqlproxy.sqlproxy"
        - name: POSTGRES_PORT_5432_TCP_PORT
          value: "5432"
        - name: POSTGRES_DATABASE
          value: keycloak
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: admin-user
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: admin-password
        - name: KEYCLOAK_LOGLEVEL
          value: INFO
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        ports:
        - name: http
          containerPort: 8080
#        livenessProbe:
#          httpGet:
#            path: /auth
#            port: 8080
#        readinessProbe:
#          httpGet:
#            path: /auth
#            port: 8080
        resources:
{{ toYaml .Values.resources | indent 10 }}
